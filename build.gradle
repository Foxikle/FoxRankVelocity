plugins {
    id 'java'
    id 'eclipse'
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.0.1"
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dev.foxikle'
version = '0.01-alpha4'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"
    implementation "dev.dejvokep:boosted-yaml:1.3"
    implementation"mysql:mysql-connector-java:8.0.32"
    annotationProcessor "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"
}


publishing {
    repositories {
        maven {
            name = "FoxikleWebNetRepository"
            url = uri("https://repo.foxikle.dev/webnet")
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        create(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version
            from components.java
        }
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = 17
    targetCompatibility = 17
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks{
    assemble {
        dependsOn(shadowJar)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

rootProject.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)

shadowJar {
    // The second string is where you will locate dev.dejvokep.boostedyaml
    relocate 'dev.dejvokep.boostedyaml', 'dev.foxikle.foxrankvelocity.libs'
    mergeServiceFiles()
    destinationDirectory.set(file("C:/Users/tscal/Desktop/bungeeserver/Velocity/plugins"))
}
